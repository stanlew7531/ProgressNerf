baseDir: "/home/stanlew/Documents/ProgressNerfModels/ycb_video_nerfmm/soup_can_5"
load_from_epoch: -1
batch_size: 2
num_workers: 1
train_epochs: 50000
testPeriod: 10
save_period: 10
device: "cuda:1"
build_weighting_cloud: True

train_dataloader:
    dataloader: "YCBVideoDataloader"
    YCBVideoDataloader: { baseDataDir: "/home/stanlew/data/ycb-video-noclutter/tool-parts_dataset/", scenes: ["0003","0008","0012","0017","0018","0021","0022","0033","0034"], datasetType: "train", samplesLimit: 1500, rel_tools: ["04"]}
test_dataloader:
    dataloader: "YCBVideoDataloader"
    YCBVideoDataloader: { baseDataDir: "/home/stanlew/data/ycb-video-noclutter/tool-parts_dataset/", scenes: ["0036","0037","0044","0060","0066","0068","0076","0079","0087","0089"], datasetType: "train", samplesLimit: 5, rel_tools: ["04"]}

desired_tool: "04"
apply_masks: ['04']
eval_subbatch_size: 1024

raypicker: "nerfmm_raypicker"
nerfmm_raypicker: { base_raypicker: "weighted_raypicker", weighted_raypicker: { num_rays: 512 }}
raysampler: "voxel_grid_bbox"
voxel_grid_bbox: { num_samples: 32}

camera_fx: 1.066778e+03
camera_fy: 1.067487e+03
camera_tx: 3.129869e+02
camera_ty: 2.413109e+02
render_resoluion: [640,480]
coarse_model:
    nnModel: "fast_nerf"
    fast_nerf: {includeOrigPos: True, pos_enc_levels: 10, dir_enc_levels: 4, hidden_units_pos: 384, hidden_units_dir: 128, layers_pos: 8, layers_dir: 4, D: 8, skips: [4]}

posEncoder: {encoder: "positional_encoder", positional_encoder: {levels: 10, includeOrig: True}}
dirEncoder: {encoder: "positional_encoder", positional_encoder: {levels: 4}}
optim_lr: 0.00075

init_voxel_size: 0.01
voxel_visit_after_epoch: 50
voxel_visit_depth_stoppage: 0.01
voxel_visit_factor: 0.99
half_voxels_schedule: []
prune_voxels_schedule: []
prune_voxels_sample_count: 16000
prune_voxels_gamma: 0.5

make_cache: True
cache_l: 1024
cache_voxel_size: 0.001
cache_D: 8

boundary_min_maxes: [-0.05, -0.05, -0.05, 0.05, 0.05, 0.05]

renderer: "voxel_neural_renderer"
voxel_neural_renderer: {}
train_loss:
    loss_fn: "mse_loss"
    mse_loss: {}
test_loss:
    loss_fn: "mse_loss"
    mse_loss: {}